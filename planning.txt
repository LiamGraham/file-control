Features:
- View previous versions
    - Can view and operate on previous version (i.e. commits) using 'git checkout'
    - https://stackoverflow.com/questions/30983500/how-to-save-changes-when-in-detached-head-state
- Revert to previous versions
    - This 'reversion' may consist of:
        - Revert to previous file version and delete 'upstream'/later versions
- New files are automatically staged and committed
- Changes to files are automatically committed upon the change occurring

Structure:
- Main program loop - gitbox.py (monitors state of files and makes necessary commits)
- Repo management interface - manager.py
- Version viewing/reversion GUI - gui.py

Tools:
- sh (git interface)
- PyInstaller (application bundler) (https://pyinstaller.readthedocs.io/en/v3.3.1/)
- PyQt (GUI)

Plan:
1. Implement repo management interface
2. 
3. 

Long-running Python processes: 
https://www.reddit.com/r/Python/comments/2z63n1/memory_running_a_python_script_infinitely/
Restart process:
http://code.activestate.com/recipes/576911-keep-a-process-up-and-running/
Git python modules:
https://stackoverflow.com/questions/1456269/python-git-module-experience
Port sh to Windows:
https://stackoverflow.com/questions/28618906/porting-sh-1-11-based-code-to-windows
Store .git directory outside of the working directory:
https://stackoverflow.com/questions/505467/can-i-store-the-git-folder-outside-the-files-i-want-tracked